import aiohttp
import requests

from data import config as c

from discord.ext import commands
from discord import Embed, Colour, Webhook, AsyncWebhookAdapter
from utils.loader import dbot, hooks

from utils import logger


help_text = "–≠—Ç–æ –±–æ—Ç —Å –Ω–æ–≤–æ—Å—Ç–Ω–æ–π –ª–µ–Ω—Ç–æ–π –æ—Ç **¬´Project: Armor¬ª**\n"\
            "–û—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É `!armor` –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª, –≥–¥–µ —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏!\n"\
            "–ß—Ç–æ–±—ã –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏, –Ω–∞–ø–∏—à–∏ `!unarmor`\n\n"\
            "_–ù–∞ –æ–¥–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ –º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∫–∞–Ω–∞–ª. "\
            "–ü—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ –∫–∞–Ω–∞–ª –±—É–¥–µ—Ç –ø–µ—Ä–µ–ø—Ä–∏–≤—è–∑–∞–Ω..._"

pa_url = "https://i.comss.pics/2021/11/19/photo_2021-09-22_01-20-48.jpg"

dbot.remove_command('help')


@dbot.command()
@commands.has_guild_permissions(administrator=True)
async def armor(ctx):
    try:
        channel_id = ctx.message.guild.id
        if hooks.get_hook(id=channel_id) is not None:
            logger.logging.debug("The hook exists")
            async with aiohttp.ClientSession() as session:
                old_hook = Webhook.from_url(url=hooks.get_hook(id=channel_id)[0], adapter=AsyncWebhookAdapter(session))
                await old_hook.delete()
                hooks.delete_hook(id=channel_id)
                logger.logging.debug("The hook deleted")

        try:
            name = "Project: Armor"
            icon_url = pa_url
            url = "https://t.me/projectarmor"
            color = Colour.dark_green()

            title = "‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞!"
            description = "–ù–æ–≤–æ—Å—Ç–∏ –æ—Ç **¬´Project: Armor¬ª** –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª.\n\n" \
                          "_–ß—Ç–æ–±—ã –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏, –Ω–∞–ø–∏—à–∏—Ç–µ `!unarmor`_"
            logger.logging.debug("Webhook created")

            webhook = await ctx.channel.create_webhook(name="Armor News",
                                                       avatar=requests.get(pa_url).content,
                                                       reason="Subscribe 'Project Armor' news")
            hooks.add_hook(id=channel_id, link=webhook.url)
            logger.logging.info("Webhook inserted")

        except Exception as e:
            logger.logging.warning(e)
            name = "Cillum Project"
            title = "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–µ–±—Ö—É–∫–∞!"
            description = "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\n\n" \
                          "–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ [–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É](https://t.me/KoshkenS)."
            color = Colour.dark_red()
            icon_url = "https://i.comss.pics/2021/11/13/CillumLogo2f869011530d4a42.png"
            url = "https://t.me/cillum_project"

        e = Embed(title=title,
                  description=description,
                  color=color,
                  timestamp=ctx.message.created_at)
        e.set_author(name=name,
                     icon_url=icon_url,
                     url=url)
        await ctx.channel.send(embed=e)

    except Exception as e:
        logger.logging.error(e)


@commands.has_guild_permissions(administrator=True)
@dbot.command()
async def unarmor(ctx):
    try:
        channel_id = ctx.message.guild.id

        if hooks.get_hook(id=channel_id) is not None:
            async with aiohttp.ClientSession() as session:
                old_hook = Webhook.from_url(url=hooks.get_hook(id=channel_id)[0], adapter=AsyncWebhookAdapter(session))
                await old_hook.delete()
                hooks.delete_hook(id=channel_id)

            title = "‚ùé –†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞!"
            description = "–ù–æ–≤–æ—Å—Ç–∏ –æ—Ç **¬´Project: Armor¬ª** –±–æ–ª—å—à–µ –Ω–µ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª.\n\n" \
                          "_–ß—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É, –Ω–∞–ø–∏—à–∏—Ç–µ `!armor`_"
            color = Colour.dark_green()

        else:
            title = "‚ùå ‡ºº „Å§ ‚óï_‚óï ‡ºΩ„Å§–£–∂–µ —É–¥–∞–ª—ë–Ω‡ºº „Å§ ‚óï_‚óï ‡ºΩ„Å§"
            description = "–†–∞—Å—Å—ã–ª–∫–∞ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞, –≤–µ–±—Ö—É–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\n\n" \
                          "_–ù–∞–ø–∏—à–∏—Ç–µ `!help` –¥–ª—è –ø–æ–º–æ—â–∏ –∏–ª–∏ `!armor` –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏._"
            color = Colour.dark_red()

        e = Embed(title=title,
                  description=description,
                  color=color,
                  timestamp=ctx.message.created_at)
        e.set_author(name="Project: Armor",
                     icon_url=pa_url,
                     url="https://t.me/projectarmor")

        await ctx.channel.send(embed=e)

    except Exception as e:
        logger.logging.error(e)


@dbot.command()
async def help(ctx):
    try:
        e = Embed(title="üëÄ –ü—Ä–∏–≤–µ—Ç!",
                  description=help_text,
                  color=Colour.from_rgb(0, 199, 255))
        e.set_thumbnail(url=pa_url)
        e.set_author(name="Cillum Project",
                     icon_url="https://i.comss.pics/2021/11/13/CillumLogo2f869011530d4a42.png",
                     url="https://t.me/cillum_project")
        await ctx.channel.send(embed=e)
    except Exception as e:
        logger.logging.error(e)


@dbot.event
async def on_guild_join(guild):
    e = Embed(title="üëÄ –ü—Ä–∏–≤–µ—Ç!",
              description=help_text,
              color=Colour.from_rgb(0, 199, 255))
    e.set_thumbnail(url=pa_url)
    e.set_author(name="Cillum Project",
                 icon_url="https://i.comss.pics/2021/11/13/CillumLogo2f869011530d4a42.png",
                 url="https://t.me/cillum_project")
    if guild.system_channel is not None:
        await guild.system_channel.send(embed=e)
    else:
        logger.logging.info(f"No system channel at ¬´{guild}/{guild.id}¬ª server")


if __name__ == "__main__":
    print(c.DS_INVITE_LINK)
    dbot.run(c.DS_TOKEN)
